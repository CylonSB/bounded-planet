name: Rust

on:
  push:
    branches: [ master, staging, trying ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        profile: minimal
        components: rustfmt
    
    - run: cargo +nightly fmt --all -- --check

  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    needs: format

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: clippy
    - uses: actions/cache@v2.1.1
      with:
        path: target
        key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-

    - run: cargo clippy

  build:
    runs-on: windows-latest
    needs: format
    
    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
    
    - name: Print rustc version
      run: rustc --version
      
    - name: Build
      run: cargo build --verbose
